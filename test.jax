fun assert(b: bool) @extern


fun calloc(num: number, size: number): voidptr @extern
fun memcpy(dest: voidptr, src: voidptr, size: number): voidptr @extern

struct array_base {
  elem_size: number
  data: voidptr
  len: number
  cap: number
}
fun _new_array_from_literal(len: number, cap: number, elem_size: number, c_array: voidptr): array_base {
  var a: array_base
  a.data = calloc(len, elem_size)
  a.elem_size = elem_size
  a.len = len
  a.cap = cap
  memcpy(a.data, c_array, len * elem_size)
  return a
}


var xs = [1,2,3]
// print(xs[1] + xs[2])

fun iterate(xs, f: lambda) @inline {
  var i = 0
  while i < xs.len {
    f(xs[i])
    i = i + 1
  }
}
// iterate(xs) {|x| print(x)}

fun do_some_stuff(xs) {
  for x in xs {
    print("x: $x")
    if x == 2 {
      return
    }
  }
}
do_some_stuff(xs)
