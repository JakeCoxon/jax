//var start = clock()
var apple = 5
var thing = "monkey"
var banana = 4 + (apple + 2) / 3 - 2
// print(banana)

// banana = banana - 1
// print(banana)

// // print(thing == "monkey")
// // print(thing + "_something")

// print(thing)

// {
// 	banana = 3
// }

fun hello(x: number, y: bool, z: string) {
  print(x)
  print(y)
  print(z)
}
hello(2, apple < 40, thing)

// fun things(a, b): number {
//   return 123 + a * b
// }

if true {
	print("Yes")
} else {
	print("Banana")
}

while banana > 0 {
	banana = banana - 1
	print(banana)
}

// print(things(5, 6))
// things("asd", "asd")
// print(200 + things(true, 6))

// fun compare(x, y) {
 
//   if x == y {
//     print("They are the same")
//   }
// }
// compare("hello", "jello")
// compare(5, 5)

//fun xxx(y) {
//  if true {
//    return
//  }
//  xxx(y - 1)
//}
//xxx(1)
//
// fun fib(n): number {
//  if n < 2 {
//    return n
//  }
//  return fib(n - 2) + fib(n - 1);
// }
//
////print("{}", fib(35) == 9227465)
////print("{}", fib(3))

// if apple < 10 {
//  print("apple is less than 10")
// }

// while banana > 0 {
//  banana = banana - 1
//  print(banana)
// }

// var dyn: dynamic = "thing"
// print(dyn)
// dyn = 200
// print(dyn)
//
//
//{
//  var x = array()
//  print("size of {} is {}", x, size(x))
//
//  add(x, "hello")
//  add(x, "this")
//  add(x, "is")
//  add(x, "a")
//  add(x, "test")
//  print("size of {} is {}", x, size(x))
//
//  var i = 0
//  while i < size(x) {
//    print("index {} is {}", i, get(x, i))
//    i = i + 1
//  }
//
//}
//
//print("time was {}", clock() - start)